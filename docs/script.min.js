function getAdjustments(t,e,r){if(1!==e&&0!==e){let n=[];weighting_inputs.forEach(t=>{n.push(t.value)});let a=new Array(e-1),i=new Array(e-1);for(let r=0;r<e-1;r++){i[r]=0==r?[100-t]:[0];let n=new Array(e-1);for(let t=0;t<n.length;t++)n[t]=0;a[r]=n}for(let t=0;t<e-1;t++)for(let r=0;r<e-1;r++)0==t?a[t][r]=1:(r==t-1&&(a[t][r]=-n[t+1]),r==t&&(a[t][r]=n[t]));let o=calculator(a,i);o.splice(r,0,t);for(let t=0;t<e;t++){weighting_inputs[t].value=o[t];let e=parseFloat(o[t]).toFixed(2);weighting_inputs_displays[t].innerHTML=e}}else weighting_inputs_displays[0].innerHTML=t}function categoryCompiler(t,e,r,n,a,i,o){let c;"lin"==e||"linear"==e?c=linearBias(r,n,a,i,o):"quad"==e||"quadratic"==e?c=quadraticBias(r,n,a,i,o):"cube"!=e&&"cubic"!=e||(c=cubicBias(r,n,a,i,o)),category_scores[t].innerHTML=c.toFixed(2),scores[t]=c}function linearBias(t,e,r,n,a){function i(t){return n*(t-r)}function o(t){return 1e3/Math.PI*Math.atan(1e3*t)}let c=100*a/5,u=(e-5.001)/(-e-5.001)*(1/c),s=o(-i(t))+o(i(t))*(-u*i(t)+1)+o(i(t-1/(n*u)))*(u*i(t)-1)+500;return s}function quadraticBias(t,e,r,n,a){function i(t){return 1/Math.PI*Math.atan(t)+.5}function o(t){return 2*i(-2*Math.pow(t,2))-1}function c(t){return n*(t-r)}let u=(e-5.001)/(e+5.001),s=1/(1.38648041843*a),l=1e3*i(1e3*c(t))*o(s*u*c(t))+1e3;return l<1e-4?1e-4:l}function cubicBias(t,e,r,n,a){function i(t){return 1/Math.PI*Math.atan(t)+.5}function o(t){return 2*i(2*Math.pow(t,3))-1}function c(t){return n*(t-r)}let u=(e-5.001)/(e+5.001),s=1/(1.38648041843*a),l=1e3*i(1e3*c(t))*o(s*u*c(t))+1e3;return l<1e-4?1e-4:l}function setOffset(){function t(t){let e=0;for(let r=0;r<t;r++)e+=parseFloat(weighting_inputs[r].value);return 3.6*e}function e(t){let e=0;for(let r=0;r<t;r++)e+=parseFloat(weighting_inputs[r].value);return 3.6*e}category_background_circles.forEach((e,r)=>{e.setAttribute("stroke-dashoffset",92*Math.PI*(1-weighting_inputs[r].value/100)),r>=1&&e.setAttribute("transform","rotate("+t(r).toString()+")")}),category_score_circles.forEach((t,r)=>{t.setAttribute("stroke-dashoffset",Math.min((92*Math.PI-6)*(1-weighting_inputs[r].value*(scores[r]/1e3)*.01),92*Math.PI-12)+5),r>=1&&t.setAttribute("transform","rotate("+e(r).toString()+")")})}function getTotalScore(){let t=0;for(let e=0;e<config.category_count;e++)t+=scores[e]/1e3*parseFloat(weighting_inputs[e].value/100);let e=100*t;totalScoreText.setAttribute("fill","hsl("+(e/100*115).toString()+",78%,45%)"),totalScoreCircle.setAttribute("stroke","hsl("+(e/100*115).toString()+",78%,45%)"),totalScoreCircle.setAttribute("stroke-dashoffset",80*Math.PI*(1-e/100)),totalScoreText.innerHTML=e.toFixed(0)}import calculator from"../src/matrix.js";let inputData=[20,23,80,2],config={category_count:4,category_names:["Time","Cost","Efficiency","Personell"],category_value_unit:["s","â‚¬","%","P"],category_target_values:[10,20,100,0],category_target_value_step:[1,.01,.01,1],category_direction:[1,1,-1,1],category_grain:[1,1,1,1],category_evaluation:["linear","quadratic","cubic","linear"],category_weighting_preset:[25,25,25,25],colors:["#ff0000","#ff7b00","#ffbb00","#00dfba","#127efa","#8921ff","#d500e9"]};const frame=document.querySelector(".table_body"),fractions=document.querySelector("#dsvc_fractions");for(let t=1;t<config.category_count+1;t++){let e=document.createElement("tr");e.innerHTML='\n        <th class="category">\n            <p>\n                '+config.category_names[t-1]+'\n            </p>\n        </th>\n        <td>\n            <p>\n                <output class="data_input_display" for="data_input_'+t.toString()+'" >'+inputData[t-1]+"</output>\n                <span> "+config.category_value_unit[t-1].toString()+'</span>\n            </p>\n        </td>\n        <td class="target_value" >\n            <input \n                class="target_value_input" \n                id="target_value_input_'+t.toString()+'" \n                type="range" \n                value="'+config.category_target_values[t-1]+'" \n                step="'+config.category_target_value_step[t-1]+'">\n            <p class="tab">\n                <output class="target_value_input_display" for="target_value_input_'+t.toString()+'">'+config.category_target_values[t-1]+" </output>\n                <span>"+config.category_value_unit[t-1].toString()+'</span>\n            </p>\n        </td>\n        <td class="bias">\n            <input \n                class="bias_input" \n                id="bias_input_'+t.toString()+'" \n                min="-5" \n                max="5" \n                type="range"\n                step="1"\n                value="0">\n            <p class="tab">\n                <output class="bias_input_display" for="bias_input_'+t.toString()+'">0</output>\n            </p>\n        </td>\n        <td class="weighting" >\n            <input \n                class="weighting_input" \n                id="weighting_input_'+t.toString()+'" \n                type="range"\n                step="0.01"\n                value="'+(100/config.category_count).toString()+'">\n            <p class="tab">\n                <output class="weighting_input_display" for="weighting_input_'+t.toString()+'">'+config.category_weighting_preset[t-1]+'</output>\n                <span> %</span>\n            </p>\n        </td>\n        <td>\n            <p class="tab">\n                <output class="category_score">50</output><span>/1000</span>\n            </p>\n        </td>\n    ',frame.appendChild(e),1==config.category_direction[t-1]?document.querySelector("#target_value_input_"+t.toString()).setAttribute("max",inputData[t-1].toString()):-1==config.category_direction[t-1]&&document.querySelector("#target_value_input_"+t.toString()).setAttribute("min",inputData[t-1].toString())}for(let t=1;t<config.category_count+1;t++){let e=[document.createElementNS("http://www.w3.org/2000/svg","circle"),document.createElementNS("http://www.w3.org/2000/svg","circle")];e[0].setAttribute("id","dsvc_fraction_"+t.toString()+"_background"),e[0].setAttribute("stroke",config.colors[t]),e[0].setAttribute("class","fraction fraction_bg"),e[0].setAttribute("stroke-dasharray",(92*Math.PI-6).toString()),e[1].setAttribute("id","dsvc_fraction_"+t.toString()+"_indicator"),e[1].setAttribute("stroke",config.colors[t]),e[1].setAttribute("class","fraction fraction_bar"),e[1].setAttribute("stroke-dasharray",(92*Math.PI-6).toString()),fractions.appendChild(e[0]),fractions.appendChild(e[1])}let target_value_inputs=Array.from(document.querySelectorAll(".target_value_input")),bias_inputs=Array.from(document.querySelectorAll(".bias_input")),weighting_inputs=Array.from(document.querySelectorAll(".weighting_input")),target_value_inputs_displays=Array.from(document.querySelectorAll(".target_value_input_display")),bias_inputs_displays=Array.from(document.querySelectorAll(".bias_input_display")),weighting_inputs_displays=Array.from(document.querySelectorAll(".weighting_input_display")),category_scores=Array.from(document.querySelectorAll(".category_score")),scores=[],category_background_circles=Array.from(document.querySelectorAll(".fraction_bg")),category_score_circles=Array.from(document.querySelectorAll(".fraction_bar")),totalScoreText=document.querySelector("#dvsc_score_text"),totalScoreCircle=document.querySelector("#dvsc_score_indicator");totalScoreCircle.setAttribute("stroke-dasharray",80*Math.PI-6);for(let t=0;t<config.category_count;t++)scores[t]=0,target_value_inputs[t].addEventListener("input",e=>{target_value_inputs_displays[t].innerHTML=e.target.value,categoryCompiler(t,config.category_evaluation[t],inputData[t],bias_inputs[t].value,e.target.value,config.category_direction[t],config.category_grain[t]),setOffset(),getTotalScore()}),bias_inputs[t].addEventListener("input",e=>{bias_inputs_displays[t].innerHTML=e.target.value,categoryCompiler(t,config.category_evaluation[t],inputData[t],parseFloat(e.target.value),parseFloat(target_value_inputs[t].value),config.category_direction[t],config.category_grain[t]),setOffset(),getTotalScore()}),weighting_inputs[t].addEventListener("input",e=>{getAdjustments(e.target.value,config.category_count,t),setOffset(),getTotalScore()});